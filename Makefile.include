CC   ?= gcc
CXX  ?= g++
MOC  ?= moc
FLEX ?= flex
DOXYGEN ?= doxygen
DIA ?= dia
CONVERT ?= convert

SYSTEM = $(shell uname)

SYSTEM_CXXFLAGS =

ifeq '$(SYSTEM)' 'FreeBSD'
  AWK ?= gawk
  SED ?= gsed
  SYSTEM_CXXFLAGS = -Wno-long-long
else
  AWK ?= awk
  SED ?= sed
endif

NOWALL ?= no
NOPEDANTIC ?= no
DEBUG ?= yes
PROFIL ?= no

ifeq '$(PROFIL)' 'yes'
  DEBUG = yes
endif

ifeq '$(DEBUG)' 'yes'
  CFLAGS = -g
  CXXFLAGS = -g
endif
ifeq '$(PROFIL)' 'yes'
  CFLAGS += -pg
  CXXFLAGS += -pg
endif

ifneq '$(NOWALL)' 'yes'
  CFLAGS += -Wall
  CXXFLAGS += -Wall
endif
ifneq '$(NOPEDANTIC)' 'yes'
  CFLAGS += -pedantic
  CXXFLAGS += -pedantic
endif

CXXFLAGS += $(SYSTEM_CXXFLAGS)

LDFLAGS =

HAS_ODE ?= no
HAS_BT  ?= no
HAS_OSG ?= no
WANT_ODE ?= yes
WANT_OSG ?= yes
# Disable Bullet for now
WANT_BT  ?= no

# Try to find ODE
ifeq '$(WANT_ODE)' 'yes'
  ifeq '$(HAS_ODE)' 'no'
    HAS_ODE := $(shell if pkg-config ode --exists; then echo "yes"; else echo "no"; fi;)
    ifeq '$(HAS_ODE)' 'yes'
      ODE_CXXFLAGS = $(shell pkg-config ode --cflags)
      ODE_LDFLAGS  = $(shell pkg-config ode --libs)
    endif
  endif
endif

# Try to find OSG
ifeq '$(WANT_OSG)' 'yes'
  ifeq '$(HAS_OSG)' 'no'
    HAS_OSG = $(shell if pkg-config openscenegraph --exists; then echo "yes"; else echo "no"; fi;)
    ifeq '$(HAS_OSG)' 'yes'
      OSG_CXXFLAGS = $(shell pkg-config openscenegraph --cflags)
      OSG_LDFLAGS  = $(shell pkg-config openscenegraph --libs)
    endif
  endif
endif

# Try to find Bullet
ifeq '$(WANT_BT)' 'yes'
  ifeq '$(HAS_BT)' 'no'
    HAS_BT = $(shell if pkg-config bullet --exists; then echo "yes"; else echo "no"; fi;)
    ifeq '$(HAS_BT)' 'yes'
      BT_CXXFLAGS  = $(shell pkg-config bullet --cflags)
      BT_LDFLAGS   = $(shell pkg-config bullet --libs)
    endif
  endif
endif

check-dep-osg:
	@echo "Checking Openscenegraph..."
	@if [ "$(HAS_OSG)" != "yes" ]; then echo "Dependecy error: pkg-config can't find openscenegraph package"; exit 1; fi;
	@echo "Openscenegraph found:"
	@echo "  OSG_CXXFLAGS = $(OSG_CXXFLAGS)"
	@echo "  OSG_LDFLAGS  = $(OSG_LDFLAGS)"

check-dep-bt:
	@echo "Checking Bullet..."
	@if [ "$(HAS_BT)" != "yes" ]; then echo "Dependecy error: pkg-config can't find bullet package"; exit 1; fi;
	@echo "Bullet found"
	@echo "  BT_CXXFLAGS = $(BT_CXXFLAGS)"
	@echo "  BT_LDFLAGS  = $(BT_LDFLAGS)"

check-dep-ode:
	@echo "Checking ODE..."
	@if [ "$(HAS_ODE)" != "yes" ]; then echo "Dependecy error: pkg-config can't find ode package"; exit 1; fi;
	@echo "ODE found"
	@echo "  ODE_CXXFLAGS = $(ODE_CXXFLAGS)"
	@echo "  ODE_LDFLAGS  = $(ODE_LDFLAGS)"
	
check-dep: check-dep-osg check-dep-bt check-dep-ode

showvars:
	@echo "SYSTEM = "$(SYSTEM)
	@echo ""
	@echo "CC      = $(CC)"
	@echo "CXX     = $(CXX)"
	@echo "MOC     = $(MOC)"
	@echo "FLEX    = $(FLEX)"
	@echo "AWK     = $(AWK)"
	@echo "SED     = $(SED)"
	@echo "DOXYGEN = $(DOXYGEN)"
	@echo "SED     = $(SED)"
	@echo "DIA     = $(DIA)"
	@echo ""
	@echo "DEBUG      = $(DEBUG)"
	@echo "PROFIL     = $(PROFIL)"
	@echo "NOWALL     = $(NOWALL)"
	@echo "NOPEDANTIC = $(NOPEDANTIC)"
	@echo ""
	@echo "CFLAGS   = $(CFLAGS)"
	@echo "CXXFLAGS = $(CXXFLAGS)"
	@echo "LDFLAGS  = $(LDFLAGS)"
	@echo ""
	@echo "WANT_ODE     = $(WANT_ODE)"
	@echo "HAS_ODE      = $(HAS_ODE)"
	@echo "ODE_CXXFLAGS = $(ODE_CXXFLAGS)"
	@echo "ODE_LDFLAGS  = $(ODE_LDFLAGS)"
	@echo "WANT_BT      = $(WANT_BT)"
	@echo "HAS_BT       = $(HAS_BT)"
	@echo "BT_CXXFLAGS  = $(BT_CXXFLAGS)"
	@echo "BT_LDFLAGS   = $(BT_LDFLAGS)"
	@echo "WANT_OSG     = $(WANT_ODE)"
	@echo "HAS_OSG      = $(HAS_OSG)"
	@echo "OSG_CXXFLAGS = $(OSG_CXXFLAGS)"
	@echo "OSG_LDFLAGS  = $(OSG_LDFLAGS)"

.DEFAULT_GOAL := all
.PHONY: showvars check-dep-osg check-dep-bt check-dep
